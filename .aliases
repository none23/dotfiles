# list files
alias la='ls -AFlh --color=tty'
alias ll='ls -lFh --color=tty'
alias ls='ls --color=tty'

# yaourt {{{
alias y='yaourt'
alias Y='yaourt -Syua && npm update -g'
alias Yy='yaourt -Syy'
alias Yc='yaourt -Sc'
alias Ycc='yaourt -Scc && npm cache clean --force'
alias yor='yaourt -Rsc $(yaourt -Qtdq)'

# sshuttle
alias sshide='sshuttle -r aws 0/0 --dns --daemon --pidfile /tmp/sshuttle.pid'
alias sshide-dl='sshuttle -r aws 0/0 --dns --daemon --pidfile /tmp/sshuttle.pid --no-latency-control'
alias sshive='sshuttle -r aws 0/0 --dns --verbose'
alias sshive-dl='sshuttle -r aws 0/0 --dns --verbose --no-latency-control'

# npm/yarn
alias ni='yarn'
alias nrb='yarn run build'
alias nrt='yarn run test'
alias nrw='yarn start || yarn run watch'

# wireless
function _wireless_aliases {
  local IFACE
  IFACE="wlp3s0"

  alias monup="sudo ifconfig $IFACE down && sudo iwconfig $IFACE mode monitor && sudo ifconfig $IFACE up"
  alias mondown="sudo ifconfig $IFACE down && sudo iwconfig $IFACE mode managed && sudo ifconfig $IFACE up"
  alias airod="sudo airodump-ng -i $IFACE --wps --manufacturer"
  alias rvr="sudo reaver -i $IFACE -K 1 -vv -b"
  alias wmac="sudo macchanger -ab $IFACE"
}
alias N='sudo systemctl start NetworkManager.service'
alias nmkill='sudo killall NetworkManager && echo "NetworkManager killed" || echo "Nothing to kill"'
alias foilhat='sudo rfkill block all'
_wireless_aliases

# touchpad
alias toff='xinput disable Elan\ Touchpad'
alias tonn='xinput enable Elan\ Touchpad'
function ton {
    local LOCKFILE
    LOCKFILE="/tmp/.touchpad-on.lock"

    if [[ -a "$LOCKFILE" ]]; then
        xinput disable Elan\ Touchpad
        rm "$LOCKFILE"
    else
        xinput enable Elan\ Touchpad
        touch "$LOCKFILE"
    fi
}

alias eslint-none23="(cd $(npm root)/.. \
    && [[ -a .eslintrc.js ]] && mv .eslintrc.js{,.old} \
    && [[ -a ~/.eslintrc.js ]] && cp ~/.eslintrc.js .eslintrc.js \
    && yarn add -D babel-eslint eslint \
          eslint-config-none23 \
          eslint-plugin-compat \
          eslint-plugin-flowtype \
          eslint-plugin-import \
          eslint-plugin-jest \
          eslint-plugin-jsx-a11y \
          eslint-plugin-node \
          eslint-plugin-promise \
          eslint-plugin-react \
  )"

dot () {
    if [[ -d /home/n/none23/dotfiles ]]; then
        ( cd /home/n/none23/dotfiles && git aa && git c && git p )
    fi
}


# dpms control {{{
alias wkp='xset dpms force on'
alias pretendtosleep='xset dpms force off'
# }}}
# chromium-tor {{{
_start_tor_if_not_running () {
    if [[ -n "$(ps -ef | grep tor | grep -v grep)" ]]; then
        echo "tor already running"
    else
        sudo systemctl start tor.service
        echo "tor started"
    fi
}
alias chromium-tor='_start_tor_if_not_running; chromium --proxy-server="socks5://localhost:9050" --host-resolver-rules="MAP * 0.0.0.0 , EXCLUDE localhost"'

# }}}
# shutdown/reboot {{{
alias shutdown='sudo systemctl poweroff'
alias reboot='sudo systemctl reboot'

# }}}
# add sudo {{{
ifconfig () {
    /usr/bin/ifconfig "$@" || sudo /usr/bin/ifconfig "$@"
}

iwconfig () {
    /usr/bin/iwconfig "$@" || sudo /usr/bin/iwconfig "$@"
}

nmap () {
    /usr/bin/nmap "$@" || sudo /usr/bin/nmap "$@"
}

alias aircheck='sudo aircheck'
alias cfdisk='sudo cfdisk'
alias cgdisk='sudo cgdisk'
alias du='sudo du'
alias fdisk='sudo fdisk'
alias fstrim='sudo fstrim'
alias gdisk='sudo gdisk'
alias gparted='sudo gparted'
alias hdparm='sudo hdparm'
alias lsmod='sudo lsmod'
alias masscan='sudo masscan'
alias minicom='sudo minicom'
alias mkinitcpio='sudo mkinitcpio'
alias mkfs.ext4='sudo mkfs.ext4'
alias mkfs.ext3='sudo mkfs.ext3'
alias mkfs.ext2='sudo mkfs.ext2'
alias modprobe='sudo modprobe'
alias mount='sudo mount'
alias rfkill='sudo rfkill'
alias rmmod='sudo rmmod'
alias skill='sudo kill'
alias skillall='sudo killall'
alias systemctl='sudo systemctl'
alias umount='sudo umount'
alias wifite='sudo wifite'
alias wifijammer='sudo wifijammer'
# }}}
# extract {{{
extract () {
    if [ -z "$1" ]; then
         # display usage if no parameters given
         echo "Usage: extract <path/file_name_1.ext> [path/file_name_2.ext] [path/file_name_3.ext]"
         return 1
    else
        for n in $@; do
            if [ -f "$n" ] ; then
                case "${n%,}" in
                *.tar.bz2|*.tar.gz|*.tar.xz|*.tbz2|*.tgz|*.txz|*.tar)
                             tar xvf "$n"       ;;
                *.lzma)      unlzma ./"$n"      ;;
                *.bz2)       bunzip2 ./"$n"     ;;
                *.rar)       unrar x -ad ./"$n" ;;
                *.gz)        gunzip ./"$n"      ;;
                *.zip)       unzip ./"$n"       ;;
                *.z)         uncompress ./"$n"  ;;
                *.7z|*.arj|*.cab|*.chm|*.deb|*.dmg|*.iso|*.lzh|*.msi|*.rpm|*.udf|*.wim|*.xar)
                             7z x ./"$n"        ;;
                *.xz)        unxz ./"$n"        ;;
                *.exe)       cabextract ./"$n"  ;;
                *)
                            echo "extract: '$n' - unknown archive method"
                            return 1
                            ;;
                esac
            else
                echo "'$n' - file does not exist"
                return 1
            fi
        done
    fi
}
# }}}
# misc {{{
pn () {
    [[ ! "$*" ]] && ping -c 5 -i 0.2 8.8.8.8 || ping -c 5 -i 0.2 "$*"
}

rr () {
    [[ $1 ]] && vifm "$*" || vifm "$(pwd)"
}

zathura () {
    ( [[ $1 ]] && /usr/bin/zathura $1 || /usr/bin/zathura ) &
}

alias dd='sudo dd bs=512K status=progress'
alias py='ipython3'
alias df='df -h'
alias du='du -h '
alias myip='curl -s "https://httpbin.org/ip" | jq -r ".origin"'
alias lt='lt -l localhost -s none23'
alias remove_tern_port='for ternportfile in ${$(find -name .tern-port)}; do rm "$ternportfile" && echo "removed $ternportfile" ; done'
alias flow='$(npm bin)/flow'
alias jest='$(npm bin)/jest'
alias eslint='$(npm bin)/eslint'
alias stylelint='$(npm bin)/stylelint'
# }}}
# global aliases {{{
alias -g vim='nvim'
alias -g vimdiff='nvim -d'
alias -g gvim='konsole -e nvim'
alias -g ...='../..'
alias -g ....='../../..'
alias -g .....='../../../..'
# }}}

# vim:filetype=zsh:foldmethod=marker:foldlevel=2
