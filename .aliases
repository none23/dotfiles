#!/bin/zsh

__command_exists () { hash "$1" 2>/dev/null }
__alias_command_if_exists () { __command_exists "$1" && alias "$1"="$2" }

alias la='ls -AFlh --color=tty'
alias ll='ls -lFh --color=tty'
alias ls='ls --color=tty'


__command_exists npm \
  && alias npm-up="(npm outdated -g | grep -P '^[a-z-]+' -o) | xargs -d \\\\n npm i -g"
__command_exists yay \
  && alias Y='pacman -Syu && yay -Syua && npm-up'
__command_exists yay \
  && alias Yy='pacman -Syy && yay -Syy'
__command_exists yay \
  && alias Yc='pacman -Sc && yay -Sc'
__command_exists yay \
  && alias Ycc='pacman -Scc && yay -Scc && npm cache clean --force'
__command_exists yay \
  && alias yor='yay -Rsc $(yay -Qtdq)'


__alias_command_if_exists apt 'sudo apt'
__command_exists apt \
  && alias Y='apt update && apt dist-upgrade -y && npm update -g'


__sshuttle_aliases () {
  alias sshide='sshuttle -r aws 0/0 --dns --daemon --pidfile /tmp/sshuttle.pid'
  alias sshide-dl='sshuttle -r aws 0/0 --dns --daemon --pidfile /tmp/sshuttle.pid --no-latency-control'
  alias sshive='sshuttle -r aws 0/0 --dns --verbose'
  alias sshive-dl='sshuttle -r aws 0/0 --dns --verbose --no-latency-control'
}
__command_exists sshuttle && __sshuttle_aliases


__WIRELESS_IFACE="${$(ip a | grep -o -P '\d+:\s+(w[a-z0-9]+)')[(w)2]}"
__wireless_aliases () {
  local IFACE
  IFACE="$1"
  alias monup="sudo ifconfig $IFACE down && sudo iwconfig $IFACE mode monitor && sudo ifconfig $IFACE up"
  alias mondown="sudo ifconfig $IFACE down && sudo iwconfig $IFACE mode managed && sudo ifconfig $IFACE up"
  alias airod="sudo airodump-ng -i $IFACE --wps --manufacturer"
  alias rvr="sudo reaver -i $IFACE -K 1 -vv -b"
  alias wmac="sudo macchanger -ab $IFACE"
  alias foilhat='sudo rfkill block all'
}
[[ -n "$__WIRELESS_IFACE" ]] && __wireless_aliases


alias N='sudo systemctl start NetworkManager.service'
alias nmkill='sudo killall NetworkManager && echo "NetworkManager killed" || echo "Nothing to kill"'


__touchpad_aliases () {
  alias toff='xinput disable Elan\ Touchpad'
  alias tonn='xinput enable Elan\ Touchpad'
  function ton {
      local LOCKFILE
      LOCKFILE="$XDG_RUNTIME_DIR/.touchpad-on.lock"

      if [[ -a "$LOCKFILE" ]]; then
          xinput disable Elan\ Touchpad
          rm "$LOCKFILE"
      else
          xinput enable Elan\ Touchpad
          touch "$LOCKFILE"
      fi
  }
}
# if touchpad exists
[[ -n "$(cat /proc/bus/input/devices | grep -i name | grep -iP 'touch(pad)?')" ]] && __touchpad_aliases


# dpms control
alias wkp='xset dpms force on'
alias pretendtosleep='xset dpms force off'


# chromium-tor
_start_tor_if_not_running () {
    if [[ -n "$(ps -ef | grep tor | grep -v grep)" ]]; then
        echo "tor already running"
    else
        sudo systemctl start tor.service
        echo "tor started"
    fi
}
__command_exists tor \
  && __command_exists chromium \
  && alias chromium-tor='_start_tor_if_not_running; chromium --proxy-server="socks5://localhost:9050" --host-resolver-rules="MAP * 0.0.0.0 , EXCLUDE localhost"'


# shutdown/reboot
alias shutdown='sudo systemctl poweroff'
alias reboot='sudo systemctl reboot'


# add sudo
__command_exists nmap && nmap () { local NMAP; NMAP="$(which nmap)"; "$NMAP" "$@" || sudo "$NMAP" "$@" }
__alias_command_if_exists aircheck 'sudo aircheck'
__alias_command_if_exists gparted 'sudo gparted'
__alias_command_if_exists masscan 'sudo masscan'
__alias_command_if_exists minicom 'sudo minicom'
__alias_command_if_exists wifite 'sudo wifite'
__alias_command_if_exists wifijammer 'sudo wifijammer'
alias cfdisk 'sudo cfdisk'
alias cgdisk 'sudo cgdisk'
alias du 'sudo du'
alias fdisk 'sudo fdisk'
alias fstrim 'sudo fstrim'
alias gdisk 'sudo gdisk'
alias hdparm 'sudo hdparm'
alias lsmod 'sudo lsmod'
alias mkinitcpio 'sudo mkinitcpio'
alias mkfs.ext4 'sudo mkfs.ext4'
alias mkfs.ext3 'sudo mkfs.ext3'
alias mkfs.ext2 'sudo mkfs.ext2'
alias modprobe 'sudo modprobe'
alias mount 'sudo mount'
alias rfkill 'sudo rfkill'
alias rmmod 'sudo rmmod'
alias skill 'sudo kill'
alias skillall 'sudo killall'
alias systemctl 'sudo systemctl'
alias umount 'sudo umount'

extract () {
    if [ -z "$1" ]; then
         # display usage if no parameters given
         echo "Usage: extract <path/file_name_1.ext> [path/file_name_2.ext] [path/file_name_3.ext]"
         return 1
    else
        for n in $@; do
            if [ -f "$n" ] ; then
                case "${n%,}" in
                *.tar.bz2|*.tar.gz|*.tar.xz|*.tbz2|*.tgz|*.txz|*.tar)
                             tar xvf "$n"       ;;
                *.lzma)      unlzma ./"$n"      ;;
                *.bz2)       bunzip2 ./"$n"     ;;
                *.rar)       unrar x -ad ./"$n" ;;
                *.gz)        gunzip ./"$n"      ;;
                *.zip)       unzip ./"$n"       ;;
                *.z)         uncompress ./"$n"  ;;
                *.7z|*.arj|*.cab|*.chm|*.deb|*.dmg|*.iso|*.lzh|*.msi|*.rpm|*.udf|*.wim|*.xar)
                             7z x ./"$n"        ;;
                *.xz)        unxz ./"$n"        ;;
                *.exe)       cabextract ./"$n"  ;;
                *)
                            echo "extract: '$n' - unknown archive method"
                            return 1
                            ;;
                esac
            else
                echo "'$n' - file does not exist"
                return 1
            fi
        done
    fi
}

pn () { [[ ! "$*" ]] && ping -c 5 -i 0.2 8.8.8.8 || ping -c 5 -i 0.2 "$*" }

__command_exists ranger \
  && rr () { [[ -n "$1" ]] && ranger "$*" || ranger "$(pwd)" }

__ZATHURA="$(which zathura)";
__command_exists zathura \
  && zathura () {  ([[ -n "$1" ]] && "$__ZATHURA" "$1" || "$__ZATHURA" ) & }

__alias_command_if_exists pacman 'sudo pacman'
alias dd='sudo dd bs=4M status=progress'
alias df='df -h'
alias du='du -h '
__command_exists jq \
  && alias myip='curl -s "https://httpbin.org/ip" | jq -r ".origin"'
__alias_command_if_exists lt 'lt -l localhost -s none23'
__alias_command_if_exists flow '$(npm bin)/flow'
__alias_command_if_exists jest '$(npm bin)/jest'
__alias_command_if_exists eslint '$(npm bin)/eslint'
__alias_command_if_exists stylelint '$(npm bin)/stylelint'

__command_exists nvim \
  && alias -g vim='nvim'
__command_exists nvim \
  && alias -g vimdiff='nvim -d'

# vim:filetype=zsh:foldmethod=marker:foldlevel=2
